// Code generated by gobind. DO NOT EDIT.

// Java class bridge.Traffic is a proxy for talking to a Go program.
//
//   autogenerated by gobind -lang=java github.com/kr328/cfa/bridge
package bridge;

import go.Seq;

public final class Traffic implements Seq.Proxy {
	static { Bridge.touch(); }
	
	private final int refnum;
	
	@Override public final int incRefnum() {
	      Seq.incGoRef(refnum, this);
	      return refnum;
	}
	
	Traffic(int refnum) { this.refnum = refnum; Seq.trackGoRef(refnum, this); }
	
	public Traffic() { this.refnum = __New(); Seq.trackGoRef(refnum, this); }
	
	private static native int __New();
	
	public final native long getDownload();
	public final native void setDownload(long v);
	
	public final native long getUpload();
	public final native void setUpload(long v);
	
	@Override public boolean equals(Object o) {
		if (o == null || !(o instanceof Traffic)) {
		    return false;
		}
		Traffic that = (Traffic)o;
		long thisDownload = getDownload();
		long thatDownload = that.getDownload();
		if (thisDownload != thatDownload) {
		    return false;
		}
		long thisUpload = getUpload();
		long thatUpload = that.getUpload();
		if (thisUpload != thatUpload) {
		    return false;
		}
		return true;
	}
	
	@Override public int hashCode() {
	    return java.util.Arrays.hashCode(new Object[] {getDownload(), getUpload()});
	}
	
	@Override public String toString() {
		StringBuilder b = new StringBuilder();
		b.append("Traffic").append("{");
		b.append("Download:").append(getDownload()).append(",");
		b.append("Upload:").append(getUpload()).append(",");
		return b.append("}").toString();
	}
}

